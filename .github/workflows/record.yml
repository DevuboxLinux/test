name: Record

on:
  workflow_dispatch:  # Manually trigger this workflow from GitHub UI

jobs:
  record-stream:
    runs-on: ubuntu-latest

    env:
      tag_name: recording-${{ github.run_id }}

    steps:
      - name: disable initramfs
        run: sudo sed -i 's/yes/no/g' /etc/initramfs-tools/update-initramfs.conf
      - name: disable man-db
        run: sudo rm -f /var/lib/man-db/auto-update
      - name: install dependencies
        run: sudo apt-get update && sudo apt-get install -y mpv ffmpeg gh yt-dlp

      - name: mpv
        id: record
        continue-on-error: true
        run: |
          mkdir -p artifact/out
          #mpv --vo=null --ao=null "https://video.detik.com/trans7/smil:trans7.smil/chunklist_w577694934_b744100_sleng.m3u8" --stream-record=artifact/out/recorded.ts
          mpv --vo=null --ao=null "https://live.eu-north-1a.cf.dmcdn.net/sec2(C-p_Uic9qv6g6mTb0yc0slBIAdADZPxd8XTB6DY8LxKYYd7Zrrv84ufaCbuWMn8N63xLMicuDoze2XZJQYGCSrLTA5P-Cw9s7MUn20Ve-CvdRe3ga0d2TWY05P1wKeSR)/dm/3/x8qckyq/s/live-720.m3u8" --stream-record=artifact/out/recorded.ts

      - name: ts to mp4
        if: always()
        run: |
          if [ -f artifact/out/recorded.ts ]; then
            ffmpeg -i artifact/out/recorded.ts -vcodec copy -acodec copy artifact/out/recorded.mp4
            rm -rf artifact/out/recorded.ts 
          else
            echo "recorded.ts not found, skipping ffmpeg"
          fi

      - name: create release
        if: always()
        run: |
          gh release create "$tag_name" --repo "${{ github.repository }}" \
            --title "üê¨üê¨üê¨ - $tag_name" \
            --notes "üê¨üê¨üê¨" \
            --draft
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload artifacts to the release
        if: always()
        run: |
          repo=${{ github.repository }}
          tag_name=${{ env.tag_name }}
          for artifact_dir in ./artifact/*; do
            for artifact in "$artifact_dir"/*; do
              gh release upload "$tag_name" "$artifact" --repo "$repo" --clobber
            done
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup (optional)
        if: always()
        run: rm -rf artifact
